<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="mapper">
  	
  	<sql id="board">
  		POST_ID AS postId
  		,TITLE AS title
  		,WRITER_PK_NUM AS writerPkNum
  		,WRITER AS writer
  		,WRITE_DATE AS writeDate
  		,CONTENT AS content
  		,CONFIRM_DATE AS confirmDate
  		,CONFIRM_PERSON AS confirmPerson
  		,CONFIRM_STATUS AS confirmStatus
  	</sql>
  	
  	<resultMap type="map" id="history">
  		<result column="POST_ID" property="POST_ID"/>
        <result column="SEQ" property="seq"/>
        <result column="CONFIRM_DATE" property="confirmDate"/>
        <result column="CONFIRM_PERSON" property="confirmPerson"/>
        <result column="CONFIRM_STATUS" property="confirmStatus"/>
  	</resultMap>
  	
  	<!-- 게시글 검색 -->
    <sql id="search">
        <!-- 검색 키워드가 있을 때 -->
        <if test="keyword != null and keyword != ''">
            <choose>
                <!-- 검색 유형이 있을 때 -->
                <when test="searchType != null and searchType != ''">
                    <choose>
                        <when test="'writer'.equals( searchType )">
                            AND WRITER LIKE '%'||#{keyword}||'%'
                        </when>
                        <when test="'authPeople'.equals( searchType )">
                            AND CONFIRM_PERSON LIKE '%'||#{keyword}||'%'
                        </when>
                        <when test="'titleContent'.equals( searchType )">
                            AND (
			                    TITLE LIKE '%'||#{keyword}||'%'
			                    OR CONTENT LIKE '%'||#{keyword}||'%'
		                    )
                        </when>
                    </choose>
                </when>
            </choose>
        </if>
		<if test="authType != null and authType != ''">
			<choose>
				<when test="authType == 1">
					AND CONFIRM_STATUS LIKE '1'
				</when>
				<when test="authType == 2">
					AND CONFIRM_STATUS LIKE '2'
				</when>
				<when test="authType == 3">
					AND CONFIRM_STATUS LIKE '3'
				</when>
				<when test="authType == 4">
					AND CONFIRM_STATUS LIKE '4'
				</when>
				<when test="authType == 5">
					AND CONFIRM_STATUS LIKE '5'
				</when>
			</choose>
		</if>        
        <!-- 날짜 검색이 있을 때 -->
        <if test="startDate != null and startDate != ''">
        	and to_char(write_date, 'yyyy-MM-dd') between #{startDate} and #{endDate}
        </if>
    </sql>
    
    <sql id="rankValidation">
    	<!-- 부장이면 전부다 보게 -->
    	<if test="userRank != '부장'">
    		<choose>
    			<!-- 일반 사원일 때 -->
    			<when test="userRank != '과장'">		
	    			AND WRITER_PK_NUM = #{id}
	    		</when>
 	    		<!-- 과장일 때 결재대기 or 반려된 것중 결재자가 본인이거나 없는 경우 -->
	    		<otherwise>
	    			AND (
	    			  (CONFIRM_STATUS = 2 OR CONFIRM_STATUS = 3 OR CONFIRM_STATUS = 5) AND (CONFIRM_PERSON = #{userName} OR CONFIRM_PERSON IS NULL)
	    			) 
	    			OR WRITER_PK_NUM = #{id}
	    		</otherwise>
    		</choose>
    	</if>
    </sql>

	<select id="isUser" resultType="int">
		SELECT COUNT(*)
		FROM SY_MEMBER
		WHERE USER_ID = #{loginId}
	</select>
  	<!-- 여기부터 결재시스템 쿼리문 -->
 	<select id="login" resultType="int">
  		SELECT ID AS id
		FROM sy_member
		WHERE 
			USER_ID = #{loginId}
  	</select>
  	
  	<select id="user" resultType="com.com.com.Authorization.VO.MemberVO">
  		SELECT ID AS id
  			 , USER_ID AS userId
  			 , USER_PW AS userPw
  			 , USER_NAME AS userName
  			 , USER_RANK AS userRank
		FROM sy_member
		WHERE 
			ID = #{id}
  	</select>
  	
  	<select id="list" resultType="com.com.com.Authorization.VO.BoardResponse">
  		SELECT 
  			<include refid="board" />
		FROM SY_BOARD
		WHERE 1=1 
			<include refid="rankValidation" />
			<include refid="search" />
		ORDER BY POST_ID
  	</select>
  	
  	<select id="view" resultType="com.com.com.Authorization.VO.BoardResponse">
  		SELECT 
  			<include refid="board" />
		FROM SY_BOARD
		WHERE POST_ID = #{postId}
  	</select>
  	
  	<select id="history" resultMap="history">
  		SELECT *
		FROM (
		    SELECT *
		    FROM SY_HISTORY
		    ORDER BY seq
		) 
		WHERE POST_ID = #{postId}
  	</select>
  	
  	<select id="lastSeq" resultType="int">
  		SELECT NVL(MAX(POST_ID), 0) + 1 AS postId
  		FROM SY_BOARD
  	</select>
  	
  	<insert id="save">
  		INSERT INTO SY_BOARD (
			POST_ID
			, TITLE
			, WRITER_PK_NUM
			, WRITER
			, WRITE_DATE
			, CONTENT
			, CONFIRM_DATE
			, CONFIRM_PERSON
			, CONFIRM_STATUS
  		)
  		VALUES (
			#{postId}
			, #{title}
			, #{writerPkNum}
			, #{writer}
			, sysdate
			, #{content}
			, NULL
			, NULL
			, #{confirmStatus}
  		)
  	</insert>
  	
  	<insert id="creHistory">
  		INSERT INTO SY_HISTORY(
  			POST_ID
  			, SEQ
  			, CONFIRM_DATE
  			, CONFIRM_PERSON
  			, CONFIRM_STATUS
  		)
  		VALUES (
  			#{postId}
  			, (
  				SELECT NVL(MAX(SEQ), 0) 
  				FROM SY_HISTORY 
  				WHERE POST_ID = #{postId}
 			  ) + 1
  			, sysdate
  			, #{confirmPerson, jdbcType=VARCHAR}
  			, #{confirmStatus}
  		)
  	</insert>
  	
  	<update id="update">
  		UPDATE SY_BOARD
  		SET
  			WRITE_DATE = sysdate
  			, TITLE = #{title}
  			, CONTENT = #{content}
  			, CONFIRM_STATUS = #{confirmStatus}
  			, CONFIRM_PERSON = ''
		WHERE POST_ID = #{postId}
  	</update>
  	
  	<update id="reject">
  		UPDATE SY_BOARD
  		SET
  			CONFIRM_DATE = sysdate
  			, CONFIRM_PERSON = #{confirmPerson}
  			, CONFIRM_STATUS = '5'
		WHERE POST_ID = #{postId}
  	</update>
  	
  	<update id="confirm">
  		UPDATE SY_BOARD
  		SET
  			CONFIRM_DATE = sysdate
  			, CONFIRM_PERSON = #{confirmPerson}
  			, CONFIRM_STATUS = #{confirmStatus}
		WHERE POST_ID = #{postId}
  	</update>
  
  </mapper>